@using Fyl.Library.Dto

@model PropertyListModel

<div class="container">
    <h1>Properties</h1>
    <div class="buttonPanel margin-bottom-big">
        @Html.ActionLink("Add New Property", "Add", "Property", null, new { @class = "btn btn-success btn-fyl" })
    </div>

    @(Html.Kendo().Grid<LandlordPropertyListItemDto>()
        .Name("PropertyList")
        .DataSource(dataSource => dataSource
            .Ajax()
            .PageSize(20)
            .Read(r => r.Action("Index_GetProperties", "Property"))
        )
        .Columns(c =>
        {
            c.Bound(b => b.PropertyId)
                .ClientTemplate(
                    Html.ActionLink("View", "View", "Property", new { id = "#= PropertyId #" }, new { @class = "btn btn-info btn-fyl margin-right-small" }).ToString() +
                    Html.ActionLink("Edit", "Edit", "Property", new { id = "#= PropertyId #" }, new { @class = "btn btn-info btn-fyl" }).ToString()
                )
                .Title("");
            c.Bound(b => b.Beds);
            c.Bound(b => b.Address.HouseName);
            c.Bound(b => b.Address.Address1);
            c.Bound(b => b.Address.Area);
            c.Bound(b => b.Address.City);
            c.Bound(b => b.SignRequestCount).Title("Sign Requests");
        })
    ))

</div>
